import QtQuick 2.0
import Sailfish.Silica 1.0

Page {

    SilicaFlickable {
        anchors.fill: parent
        contentHeight: column.height

        VerticalScrollDecorator {}

        Column {
            id: column

            anchors.margins: Theme.horizontalPageMargin
            anchors.left: parent.left
            anchors.right: parent.right

            spacing: Theme.paddingLarge

            PageHeader {
                title: qsTr("Time axis control")
            }

            Label {
                text: qsTr("<center>Zoom In</center>"); width: parent.width; color: Theme.highlightColor
                MouseArea {
                    anchors.fill: parent
                    onClicked: { appWindowBase.appZoomIn(); appWindow.popPage() }
                }
            }

            Label {
                text: qsTr("Zoom Out")
                MouseArea {
                    anchors.fill: parent
                    onClicked: { appWindowBase.appZoomIn(); appWindow.popPage() }
                }
            }

            Label {
                text: qsTr("Go to Now")
                MouseArea {
                    anchors.fill: parent
                    onClicked: { appWindowBase.appTimeToNow(); appWindow.popPage() }
                }
            }

            Label {
                text: qsTr("Go to earlier time")
                MouseArea {
                    anchors.fill: parent
                    onClicked: { appWindowBase.appTimeToHistory(); appWindow.popPage() }
                }
            }

            Label {
                text: qsTr("Go to later time")
                MouseArea {
                    anchors.fill: parent
                    onClicked: { appWindowBase.appTimeToFuture(); appWindow.popPage() }
                }
            }

            Label {
                text: qsTr("Time window: 1 hour")
                MouseArea {
                    anchors.fill: parent
                    onClicked: { appWindowBase.appTimespan(60*60); appWindow.popPage() }
                }
            }

            Label {
                text: qsTr("Time window: 4 hours")
                MouseArea {
                    anchors.fill: parent
                    onClicked: { appWindowBase.appTimespan(4*60*60); appWindow.popPage() }
                }
            }

            Label {
                text: qsTr("Time window: 8 hours")
                MouseArea {
                    anchors.fill: parent
                    onClicked: { appWindowBase.appTimespan(8*60*60); appWindow.popPage() }
                }
            }

            Label {
                text: qsTr("Time window: 12 hours")
                MouseArea {
                    anchors.fill: parent
                    onClicked: { appWindowBase.appTimespan(12*60*60); appWindow.popPage() }
                }
            }

            Label {
                text: qsTr("Time window: 24 hours")
                MouseArea {
                    anchors.fill: parent
                    onClicked: { appWindowBase.appTimespan(24*60*60); appWindow.popPage() }
                }
            }
            Label {
                text: qsTr("Time window: 3 days")
                MouseArea {
                    anchors.fill: parent
                    onClicked: { appWindowBase.appTimespan(3*24*60*60); appWindow.popPage() }
                }
            }

            Label {
                text: qsTr("Time window: 1 week")
                MouseArea {
                    anchors.fill: parent
                    onClicked: { appWindowBase.appTimespan(7*24*60*60); appWindow.popPage() }
                }
            }

            Label {
                text: qsTr("Time window: 4 weeks")
                MouseArea {
                    anchors.fill: parent
                    onClicked: { appWindowBase.appTimespan(4*7*24*60*60); appWindow.popPage() }
                }
            }

            Label {
                text: qsTr("Time window: 100 days")
                MouseArea {
                    anchors.fill: parent
                    onClicked: { appWindowBase.appTimespan(100*24*60*60); appWindow.popPage() }
                }
            }

        }
    }

}

